{
    "collab_server" : "",
    "contents" : "---\ntitle: \"R Notebook\"\noutput: html_notebook\n---\n\nThis is an [R Markdown](http://rmarkdown.rstudio.com) Notebook. When you execute code within the notebook, the results appear beneath the code. \n\nTry executing this chunk by clicking the *Run* button within the chunk or by placing your cursor inside it and pressing *Ctrl+Shift+Enter*. \n\n```{r}\nplot(cars)\n```\n\nAdd a new chunk by clicking the *Insert Chunk* button on the toolbar or by pressing *Ctrl+Alt+I*.\n\nWhen you save the notebook, an HTML file containing the code and output will be saved alongside it (click the *Preview* button or press *Ctrl+Shift+K* to preview the HTML file).\n\n```{r}\ninstall.packages(\"HMMpa\")\n```\n\nThis is the package\n\n\n```{r}\n\n################################################################\n### Fictitious observations ####################################\n################################################################\n\nlibrary(HMMpa) #Requires HMM package [COULD ALSO USE \"require(HMMpa)\"]\n\n\n\ninputFile <- \"Verifi (WITH cogn and delib scroll; submit is separated observation).txt\"\ncon <- file(inputFile, open = \"r\")\nlines <- readLines(con)\n#for(i in 1:length(lines)){\n#  print(lines[i])\n#}\n\n\nclose(con)\n\nfor(i in 1:length(lines)){\n  \n  x5 <- as.integer(unlist(strsplit(lines[i], \", \")))\n\n  \n  invisible(capture.output(trained_HMMs <- HMM_training(x = x5, \n                            distribution_class = \"pois\", \n                            min_m = 2, \n                            max_m = 6, \n                            training_method = \"EM\")))\n  \n  cat(trained_HMMs$list_of_all_AICs_for_each_HMM_with_m_states[2], \" \",\ntrained_HMMs$list_of_all_AICs_for_each_HMM_with_m_states[3], \" \",  trained_HMMs$list_of_all_AICs_for_each_HMM_with_m_states[4], \" \",\ntrained_HMMs$list_of_all_AICs_for_each_HMM_with_m_states[5], \" \",\ntrained_HMMs$list_of_all_AICs_for_each_HMM_with_m_states[6], \" \",\ntrained_HMMs$list_of_all_BICs_for_each_HMM_with_m_states[2], \" \",\ntrained_HMMs$list_of_all_BICs_for_each_HMM_with_m_states[3], \" \",  trained_HMMs$list_of_all_BICs_for_each_HMM_with_m_states[4], \" \",  trained_HMMs$list_of_all_BICs_for_each_HMM_with_m_states[5], \" \",  trained_HMMs$list_of_all_BICs_for_each_HMM_with_m_states[6])\n\n}\n\n\n\n\n\n# print(\"BUFFER ZONE----------------------------------------------------------\")\n# print(\"TOTAL AIC\")\n# print(trained_HMMs$list_of_all_AICs_for_each_HMM_with_m_states)\n#  \n# print(\"TOTAL BIC\")\n# print(trained_HMMs$list_of_all_BICs_for_each_HMM_with_m_states)\n\n\n\n\n# print(\"PARTIAL AIC 3\")\n# print(trained_HMMs$list_of_all_AICs_for_each_HMM_with_m_states[3])\n# print(\"PARTIAL BIC 3\")\n# print(trained_HMMs$list_of_all_BICs_for_each_HMM_with_m_states[3])\n# print(\"PARTIAL AIC 4\")\n# print(trained_HMMs$list_of_all_AICs_for_each_HMM_with_m_states[4])\n# print(\"PARTIAL BIC 4\")\n# print(trained_HMMs$list_of_all_BICs_for_each_HMM_with_m_states[4])\n# print(\"PARTIAL AIC 5\")\n# print(trained_HMMs$list_of_all_AICs_for_each_HMM_with_m_states[5])\n# print(\"PARTIAL BIC 5\")\n# print(trained_HMMs$list_of_all_BICs_for_each_HMM_with_m_states[5])\n# print(\"PARTIAL AIC 6\")\n# print(trained_HMMs$list_of_all_AICs_for_each_HMM_with_m_states[6])\n# print(\"PARTIAL BIC 6\")\n# print(trained_HMMs$list_of_all_BICs_for_each_HMM_with_m_states[6])\n\n\n\n\n# ### Assummptions (number of states, probability vector, \n# ### transition matrix, and distribution parameters)\n# \n# m <- 3\n# \n# #delta <- c(0.25,0.25,0.25,0.25)\n# delta <- c(1.000000e+00, 3.198007e-18, 7.075728e-84)\n# \n# #gamma <- 0.7 * diag(m) + rep(0.3 / m)\n# gamma <- matrix(c(0.5548375, 0.44516035, 2.172920e-06, 0.1211098, 0.78734622, 9.154403e-02,     0.0415189, 0.05917411, 8.993070e-01),\n#                 nrow=3,\n#                 ncol=3,\n#                 byrow=TRUE)\n# \n# distribution_class <- \"pois\"\n# \n# #distribution_theta <- list(lambda = c(4,9,17,25))\n# distribution_theta <- list(lambda = c(1.250801e-138,  1.386366e+00,  5.467581e+00))\n# \n# \n# ### Calculating logarithmized forward/backward probabilities \n# ### and logarithmized likelihood\n# \n# forward_and_backward_probabilities_and_logL <- \n#     forward_backward_algorithm (x = x5, \n#         delta = delta, \n#         gamma = gamma, \n#         distribution_class = distribution_class, \n#         distribution_theta = distribution_theta)$logL\n# \n# print(\"logL PROBABILITY\")\n# print(forward_and_backward_probabilities_and_logL)\n# \n# print(\"Test AIC Value\")\n# AIC_HMM(logL = forward_and_backward_probabilities_and_logL, m = length(delta), k=1)\n# print(\"Test BIC Value\")\n# BIC_HMM(size = length(x5), logL = forward_and_backward_probabilities_and_logL, m = length(delta), k=1)\n\n```\n",
    "created" : 1522689404654.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1295595885",
    "id" : "BC467BE6",
    "lastKnownWriteTime" : 1528594701,
    "last_content_update" : 1528594701564,
    "path" : "~/HMM_Training/HMM_Training_Code.Rmd",
    "project_path" : "HMM_Training_Code.Rmd",
    "properties" : {
        "chunk_output_type" : "inline",
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}